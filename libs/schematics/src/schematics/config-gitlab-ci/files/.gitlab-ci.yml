workflow:
  rules:
    # skip branch pipeline if the commit starts with release
  # the release job will create a commit for each new release. This commit should not be handled by the ci!
  - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_MESSAGE =~ /^release:/'
    when: never
  # if the current branch is not protected and a merge request for this branch exists
  # skip the pipeline
  - if: '$CI_COMMIT_REF_PROTECTED != "true" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
    when: never
  - when: always

include:

- project: 'rxap/gitlab-ci'
  ref: $RXAP_CI_CONFIG_REF
  file: '/templates/node-modules/cache.yml'

# the review pipeline to check if tests and builds are successful and deploy a review environment
- local: .gitlab/ci/review.yaml
  rules:
  # run the review pipeline for merge request that do not have a channel branch as source branch
  - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ $RXAP_CI_CHANNEL && $CI_PIPELINE_SOURCE == "merge_request_event" && $REVIEW_DISABLED == null'
    # run the review pipeline for merged results merge requests if the source branch is a channel branch
  - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $RXAP_CI_CHANNEL && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result" && $CI_PIPELINE_SOURCE == "merge_request_event" && $REVIEW_DISABLED == null'

# the branch pipeline to check if tests and builds are successful
- local: .gitlab/ci/branch.yaml
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED != "true" && $CI_PIPELINE_SOURCE =~ /push|web|api/ && $BRANCH_DISABLED == null'

# the release pipeline to deploy new releases
- local: .gitlab/ci/release.yaml
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/ && $RELEASE_DISABLED == null'
- local: .gitlab/ci/release-branch.yaml
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_REF_NAME =~ /^release\// && $RELEASE_DISABLED == null'

# the main pipeline for the default branch and create new tag if necessary
- local: .gitlab/ci/main.yaml
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE =~ /push|web|api/ && $MAIN_DISABLED == null'

# the pipeline to validate the channel branch and create a new tag if necessary
- local: .gitlab/ci/channel.yaml
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE =~ /push|web|api/ && $CHANNEL_DISABLED == null'
  - if: '$CI_COMMIT_REF_NAME =~ $RXAP_CI_CHANNEL && $CI_OPEN_MERGE_REQUESTS && $CI_COMMIT_MESSAGE =~ /^release:/ && $CHANNEL_DISABLED == null'

job:
  stage: .pre
  script: echo job
  rules:
  - if: '$CI_COMMIT_REF_PROTECTED != "true" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
