variables:
  CI_CONFIG_VERSION: 'v4.26.5'

workflow:
  rules:
    # skip branch pipeline if the commit starts with release
    # the release job will create a commit for each new release. This commit should not be handled by the ci!
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_MESSAGE =~ /^release:/'
      when: never
    # skip branch pipeline for issue and renovate branches
    - if: '$CI_COMMIT_BRANCH =~ /^\d+/ || $CI_COMMIT_BRANCH =~ /^renovate\//'
      when: never
    # if the pipeline is triggered for a renovate upgrade. skip everything except the renovate trigger
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      variables:
        CODE_QUALITY_DISABLED: "true"
        SECRET_DETECTION_DISABLED: "true"
        RELEASE_DISABLED: "true"
        REVIEW_DISABLED: "true"
        PIPELINE_DISABLED: "true"
    # if the pipeline is triggered for a tag the test jobs should not be executed
    - if: '$CI_COMMIT_TAG'
      variables:
        CODE_QUALITY_DISABLED: "true"
        SECRET_DETECTION_DISABLED: "true"
    - when: always

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml
  - project: 'rxap/gitlab-ci'
    ref: v4.26.5
    file: '/templates/release.yml'
  - project: 'rxap/gitlab-ci'
    ref: v4.26.5
    file: '/templates/node-modules/install.yml'

stages:
  - build
  - test
  - trigger
  - release

install:
  extends: .install
  tags:
    - build

secret_detection:
  needs: [ ]

trigger:pipeline:
  stage: trigger
  needs:
    - job: install
      artifacts: false
  rules:
    # if the pipeline is for a merge request. skip the release job and pipeline trigger
    - if: '$PIPELINE_DISABLED || $CI_PIPELINE_SOURCE != "push"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success
  trigger:
    include: .gitlab/ci/pipeline.gitlab-ci.yml
    strategy: depend

trigger:review:
  stage: trigger
  needs:
    - job: install
      artifacts: false
  rules:
    # if the pipeline is not for a merge request. skip the review trigger
    - if: '$REVIEW_DISABLED || $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - when: on_success
  trigger:
    include: .gitlab/ci/review.gitlab-ci.yml
    strategy: depend

trigger:renovate:
  stage: trigger
  needs:
    - job: install
      artifacts: false
  rules:
    # only trigger renovate for merge requests with the current source branch
    - if: '$RENOVATE_DISABLED || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^renovate\//'
      when: never
    - when: on_success
  trigger:
    include: .gitlab/ci/renovate.gitlab-ci.yml
    strategy: depend

trigger:release:
  stage: trigger
  needs:
    - job: install
      artifacts: false
  variables:
    ENVIRONMENT_NAME: "release/$CI_COMMIT_TAG"
    VERSION: "${CI_COMMIT_TAG}"
    LATEST: "true"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: on_success
  trigger:
    include: .gitlab/ci/release.gitlab-ci.yml
    strategy: depend
