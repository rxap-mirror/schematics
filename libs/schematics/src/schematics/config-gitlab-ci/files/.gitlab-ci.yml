variables:
  CI_CONFIG_VERSION: 'v4.20.7'

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - project: 'rxap/gitlab-ci'
    ref: v4.20.7
    file: '/templates/release.yml'
  - project: 'rxap/gitlab-ci'
    ref: v4.20.7
    file: '/templates/nrwl/run.yml'
  - project: 'rxap/gitlab-ci'
    ref: v4.20.7
    file: '/templates/setup.yml'
  - project: 'rxap/gitlab-ci'
    ref: v4.20.7
    file: '/templates/firebase/deploy.yml'

stages:
  - build
  - test
  - deploy
  - trigger
  - release

setup:
  tags:
    - build
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^\d+/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - when: always

eslint-sast:
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /^\d+/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - if: $SAST_DISABLED
      when: never
    - if: $SAST_EXCLUDED_ANALYZERS =~ /eslint/
      when: never
    - if: $CI_COMMIT_BRANCH &&
        $SAST_DEFAULT_ANALYZERS =~ /eslint/
      exists:
        - '**/*.html'
        - '**/*.js'
        - '**/*.jsx'
        - '**/*.ts'
        - '**/*.tsx'

secret_detection:
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /^\d+/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - if: $SECRET_DETECTION_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

nodejs-scan-sast:
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /^\d+/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - if: $SAST_DISABLED
      when: never
    - if: $SAST_EXCLUDED_ANALYZERS =~ /nodejs-scan/
      when: never
    - if: $CI_COMMIT_BRANCH &&
        $SAST_DEFAULT_ANALYZERS =~ /nodejs-scan/
      exists:
        - '**/package.json'

test:
  image: node:lts
  stage: test
  needs:
    - setup
  allow_failure: true
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
    policy: pull
  coverage: '/Statements\s*:\s*(\d+\.?\d*)%/'
  script:
    - yarn jest --config jest.config.js --ci --reporters=jest-junit --reporters=default --coverage --coverageReporters cobertura --coverageReporters text-summary
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: always
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME =~ /^\d+/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - when: on_success
      allow_failure: true
  artifacts:
    reports:
      junit: junit.xml
      cobertura: coverage/cobertura-coverage.xml
  tags:
    - build

build:
  tags:
    - build
  needs:
    - setup
  stage: build
  extends: .run
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
    policy: pull
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success
  variables:
    TARGET: "pwa:build"
    ADDITIONAL_TARGET_LIST: "pwa:build-info"
  before_script:
    - yarn --prefer-offline
  artifacts:
    paths:
      - build
    expire_in: 1 day

deploy:
  tags:
    - script
  extends: .hosting:channel:deploy
  needs:
    - build
  variables:
    VERSION: "${CI_MERGE_REQUEST_IID}-mr"
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - if: '$FIREBASE_TOKEN == null'
      when: never
    - if: '$VERSION == null'
      when: never
    - if: '$FIREBASE_PROJECT == null'
      when: never
    - if: '$DISABLE_FIREBASE_DEPLOY'
      when: never
    - when: on_success
      allow_failure: true
  environment:
    name: "review/${CI_MERGE_REQUEST_IID}-merge-request"
    url: $DYNAMIC_ENVIRONMENT_URL
    on_stop: deploy:stop
    deployment_tier: development

deploy:stop:
  tags:
    - script
  extends: .hosting:channel:deploy:stop
  variables:
    VERSION: "${CI_MERGE_REQUEST_IID}-mr"
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: never
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"'
      when: never
    - if: '$FIREBASE_TOKEN == null'
      when: never
    - if: '$VERSION == null'
      when: never
    - if: '$FIREBASE_PROJECT == null'
      when: never
    - if: '$DISABLE_FIREBASE_DEPLOY'
      when: never
    - when: manual
      allow_failure: true
  environment:
    name: "review/${CI_MERGE_REQUEST_IID}-merge-request"
    action: stop

trigger:promote:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "$RELEASE_TARGET"
    VERSION: "${CI_COMMIT_TAG}"
  rules:
    - if: '$RELEASE_TARGET == null'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: always
  trigger:
    include: .promote.gitlab-ci.yml
    strategy: depend

trigger:master:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "master"
    VERSION: "master"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
  trigger:
    include: .master.gitlab-ci.yml
    strategy: depend

trigger:feature:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "$CI_COMMIT_REF_NAME"
    VERSION: "${CI_COMMIT_REF_SLUG}"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feature\//'
      when: always
  trigger:
    include: .master.gitlab-ci.yml
    strategy: depend

trigger:custom-release:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "$CI_COMMIT_REF_NAME"
    VERSION: "${CI_COMMIT_REF_NAME}"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release\//'
      when: always
  trigger:
    include: .release.gitlab-ci.yml
    strategy: depend

trigger:maintenance:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "$CI_COMMIT_REF_SLUG"
    VERSION: "${CI_COMMIT_REF_NAME}"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "next" || $CI_COMMIT_REF_NAME == "next-major" || $CI_COMMIT_REF_NAME =~ /^[0-9]+\.x/ || $CI_COMMIT_REF_NAME =~ /^[0-9]+\.[0-9]+\.x/ || $CI_COMMIT_REF_NAME == "beta" || $CI_COMMIT_REF_NAME == "alpha"'
      when: always
  trigger:
    include: .master.gitlab-ci.yml
    strategy: depend

trigger:release:
  stage: trigger
  needs:
    - setup
  variables:
    ENVIRONMENT_NAME: "release/$CI_COMMIT_TAG"
    VERSION: "${CI_COMMIT_TAG}"
    LATEST: "true"
  rules:
    - if: '$RELEASE_TARGET'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: always
  trigger:
    include: .release.gitlab-ci.yml
    strategy: depend

renovate:
  stage: build
  needs: [ ]
  rules:
    - if: '$DISABLE_RENOVATE'
      when: never
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^renovate\//'
      when: always
  tags:
    - build
  extends: .run
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    TARGET: "pwa:build"
  before_script:
    - yarn --prefer-offline
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
    policy: push
